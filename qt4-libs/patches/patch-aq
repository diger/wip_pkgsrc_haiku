$NetBSD$

--- configure.orig	2013-11-08 10:16:50.043778048 +0000
+++ configure
@@ -128,7 +128,7 @@ getQMakeConf1()
         ;;
     esac; done < "$1"
 }
-
+echo $AWK
 getQMakeConf2()
 {
     $AWK '
@@ -274,6 +274,10 @@ else
     PLATFORM_MAC=no
 fi
 
+PLATFORM_HAIKU=no
+if [ $UNAME_SYSTEM = "Haiku" ]; then
+PLATFORM_HAIKU=yes
+fi
 #-----------------------------------------------------------------------------
 # Qt version detection
 #-----------------------------------------------------------------------------
@@ -2995,6 +2999,9 @@ if [ -z "$PLATFORM" ]; then
      QNX:*)
         PLATFORM=unsupported/qnx-g++
         ;;
+     Haiku:*)
+        PLATFORM=haiku-g++
+        ;;
      *)
         if [ "$OPT_HELP" != "yes" ]; then
             echo
@@ -3263,6 +3270,9 @@ if [ -z "${CFG_HOST_ARCH}" ]; then
             ;;
         esac
         ;;
+    Haiku:*:*)
+         CFG_HOST_ARCH=i386
+         ;;
     *:*:*)
         if [ "$OPT_VERBOSE" = "yes" ]; then
             echo "    Trying '$UNAME_MACHINE'..."
@@ -3405,7 +3415,7 @@ QMAKE_CONF_COMPILER=`getXQMakeConf QMAKE
 TEST_COMPILER="$CXX"
 
 [ -z "$TEST_COMPILER" ] && TEST_COMPILER=$QMAKE_CONF_COMPILER
-if [ "$XPLATFORM_SYMBIAN_SBSV2" = "no" ]; then
+if [ "$XPLATFORM_SYMBIAN_SBSV2" = "no" ] && [ "$PLATFORM_HAIKU" = "no" ]; then
     #for Symbian we don't need this checking
     if [ -z "$TEST_COMPILER" ]; then
         echo "ERROR: Cannot set the compiler for the configuration tests"
@@ -4569,6 +4579,8 @@ elif [ "$PLATFORM_MAC" = "yes" ]; then
     Platform="Qt for Mac OS X"
 elif [ "$XPLATFORM_MINGW" = "yes" ]; then
     Platform="Qt for Windows"
+elif [ "$PLATFORM_HAIKU" = "yes" ]; then
+    Platform="Qt for Haiku"
 elif [ -n "`getXQMakeConf grep QMAKE_LIBS_X11`" ]; then
     PLATFORM_X11=yes
     Platform="Qt for Linux/X11"
@@ -5058,7 +5070,7 @@ if true; then ###[ '!' -f "$outpath/bin/
     done
 
     QMAKE_BUILD_ERROR=no
-    (cd "$outpath/qmake"; "$MAKE") || QMAKE_BUILD_ERROR=yes
+    (cd "$outpath/qmake"; "$MAKE" $MAKE_FLAGS) || QMAKE_BUILD_ERROR=yes
     [ '!' -z "$QCONFIG_H" ] && mv -f "$QCONFIG_H" "$QMAKE_QCONFIG_H" #move qmake's qconfig.h to qconfig.h.qmake
     [ '!' -z "$OLD_QCONFIG_H" ] && mv -f "${OLD_QCONFIG_H}.old" "$OLD_QCONFIG_H" #put back qconfig.h
     [ "$QMAKE_BUILD_ERROR" = "yes" ] && exit 2
@@ -5832,7 +5844,7 @@ if [ "$PLATFORM_MAC" = "yes" -a ! -z "$Q
     QT_NAMESPACE_MAC_CRC=`"$mactests/crc.test" "$XQMAKESPEC" "$QMAKE_CONFIG" $OPT_VERBOSE "$relpath" "$outpath" config.tests/mac/crc $QT_NAMESPACE $L_FLAGS $I_FLAGS $l_FLAGS $MAC_CONFIG_TEST_COMMANDLINE`
 fi
 
-# X11/QWS/Lighthouse
+# X11/QWS/Lighthouse/Haiku
 if [ "$PLATFORM_X11" = "yes" -o "$PLATFORM_QWS" = "yes" -o "$PLATFORM_QPA" = "yes" ]; then
 
     # auto-detect Glib support
